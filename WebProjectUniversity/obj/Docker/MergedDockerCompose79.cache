name: dockercompose5600240734978962439
services:
  db:
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: MyPass@word
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      productsnetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1400"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
  productservice:
    build:
      context: C:\Users\kristy\Documents\GitHub\WebProject\WebProjectUniversity
      dockerfile: ProductService/Dockerfile
    depends_on:
      db:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
      ConnectionStrings__DefaultConnection: Server=host.docker.internal,1400;Database=WebProjectUniDatabase;Trusted_Connection=false;MultipleActiveResultSets=true;Encrypt=false;user id=sa;password=MyPass@word;
    image: productservice
    networks:
      productsnetwork: null
    ports:
      - mode: ingress
        target: 5000
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 5001
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\kristy\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\kristy\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  webprojectuniversity.ui:
    build:
      context: C:\Users\kristy\Documents\GitHub\WebProject\WebProjectUniversity
      dockerfile: WebProjectUniversity/Dockerfile
    depends_on:
      productservice:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
    image: webprojectuniversityui
    networks:
      productsnetwork: null
    ports:
      - mode: ingress
        target: 5000
        published: "8084"
        protocol: tcp
      - mode: ingress
        target: 5001
        published: "8085"
        protocol: tcp
      - mode: ingress
        target: 8084
        protocol: tcp
      - mode: ingress
        target: 8085
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\kristy\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\kristy\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  productsnetwork:
    name: dockercompose5600240734978962439_productsnetwork
    driver: bridge
volumes:
  sqlserverdata:
    name: dockercompose5600240734978962439_sqlserverdata
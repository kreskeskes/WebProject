// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProjectUniversity.Infrastructure.AppDbContext;

#nullable disable

namespace WebProjectUniversity.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b75f9050-7a85-4d1e-bd86-63e1fa4bdb54"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("f4d38c7a-14d2-4f2c-8738-df1d6b57c4bc"),
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = new Guid("e95b4df5-8f24-4d1a-9b0a-0eebc6a9e1f3"),
                            Name = "Graphic Tee"
                        },
                        new
                        {
                            Id = new Guid("4a1d0cfc-c4e1-4b4e-b8a7-3fcab13b6cf9"),
                            Name = "Summer Dress"
                        });
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeGenderGroup")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductCategoryIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductSubcategoryId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductSubcategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e95b4df5-8f24-4d1a-9b0a-0eebc6a9e1f3"),
                            AgeGenderGroup = 0,
                            Brand = "CoolBrand",
                            Color = "Black",
                            Description = "A cool graphic t-shirt.",
                            Name = "Graphic Tee",
                            Price = 29.99m,
                            ProductCategoryIds = "[\"b75f9050-7a85-4d1e-bd86-63e1fa4bdb54\",\"f4d38c7a-14d2-4f2c-8738-df1d6b57c4bc\"]",
                            ProductSubcategoryId = new Guid("7f7e91a5-1b2b-4c6d-a99f-d1f2e5c79f35"),
                            Sizes = "[3,4]"
                        },
                        new
                        {
                            Id = new Guid("4a1d0cfc-c4e1-4b4e-b8a7-3fcab13b6cf9"),
                            AgeGenderGroup = 1,
                            Brand = "Fashionista",
                            Color = "Red",
                            Description = "A stylish summer dress.",
                            Name = "Summer Dress",
                            Price = 49.99m,
                            ProductCategoryIds = "[\"b75f9050-7a85-4d1e-bd86-63e1fa4bdb54\"]",
                            ProductSubcategoryId = new Guid("15f1fbdc-9a24-4e9b-a47e-ecf8f95c5a43"),
                            Sizes = "[2,3]"
                        });
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.ProductProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductProductCategory");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("e95b4df5-8f24-4d1a-9b0a-0eebc6a9e1f3"),
                            CategoryId = new Guid("b75f9050-7a85-4d1e-bd86-63e1fa4bdb54")
                        },
                        new
                        {
                            ProductId = new Guid("e95b4df5-8f24-4d1a-9b0a-0eebc6a9e1f3"),
                            CategoryId = new Guid("f4d38c7a-14d2-4f2c-8738-df1d6b57c4bc")
                        },
                        new
                        {
                            ProductId = new Guid("4a1d0cfc-c4e1-4b4e-b8a7-3fcab13b6cf9"),
                            CategoryId = new Guid("b75f9050-7a85-4d1e-bd86-63e1fa4bdb54")
                        });
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.ProductSubcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductSubcategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f7e91a5-1b2b-4c6d-a99f-d1f2e5c79f35"),
                            CategoryId = new Guid("b75f9050-7a85-4d1e-bd86-63e1fa4bdb54"),
                            Name = "T-Shirts"
                        },
                        new
                        {
                            Id = new Guid("15f1fbdc-9a24-4e9b-a47e-ecf8f95c5a43"),
                            CategoryId = new Guid("b75f9050-7a85-4d1e-bd86-63e1fa4bdb54"),
                            Name = "Dresses"
                        });
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.Product", b =>
                {
                    b.HasOne("WebProjectUniversity.Core.Domain.Entities.ProductFolder.ProductSubcategory", "ProductSubcategory")
                        .WithMany()
                        .HasForeignKey("ProductSubcategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductSubcategory");
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.ProductProductCategory", b =>
                {
                    b.HasOne("WebProjectUniversity.Core.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProjectUniversity.Core.Domain.Entities.ProductFolder.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.ProductSubcategory", b =>
                {
                    b.HasOne("WebProjectUniversity.Core.Domain.Entities.ProductCategory", "Category")
                        .WithMany("ProductSubcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("ProductSubcategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebProjectUniversity.Core.Domain.Entities.ProductFolder.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
